spin_manifest_version = 2

[application]
name = "openai-wasm"
version = "0.1.0"
authors = ["Daniel Heinze <daheinze@microsoft.com>"]
description = ""

[variables]
openai_api_key = { required = true }
openai_endpoint = { required = true }
openai_deployment_name = { required = true }
search_endpoint = { required = true }
search_api_key = { required = true }
search_index_name = { required = true }

[[trigger.http]]
route = "/"
component = "healthcheck"

[[trigger.http]]
route = "/api/openai"
component = "openai"

[[trigger.http]]
route = "/api/search"
component = "search"

[component.healthcheck]
source = "target/wasm32-wasi/release/openai_wasm.wasm"
allowed_outbound_hosts = []

[component.healthcheck.build]
command = "cargo build --target wasm32-wasi --release"
watch = ["src/**/*.rs", "Cargo.toml"]

[component.openai]
source = "target/wasm32-wasi/release/openai_wasm.wasm"
allowed_outbound_hosts = ["{{ openai_endpoint }}:443"]

[component.openai.build]
command = "cargo build --target wasm32-wasi --release"
watch = ["src/**/*.rs", "Cargo.toml"]

[component.openai.variables]
openai_api_key = "{{ openai_api_key }}"
openai_endpoint = "{{ openai_endpoint }}"
openai_deployment_name = "{{ openai_deployment_name }}"

[component.search]
source = "target/wasm32-wasi/release/openai_wasm.wasm"
allowed_outbound_hosts = ["{{ search_endpoint }}:443"]

[component.search.build]
command = "cargo build --target wasm32-wasi --release"
watch = ["src/**/*.rs", "Cargo.toml"]

[component.search.variables]
search_endpoint = "{{ search_endpoint }}"
search_api_key = "{{ search_api_key }}"
search_index_name = "{{ search_index_name }}"